import SwiftUI

struct ArticleDetailView: View {
    let article: SupplementArticle
    @Binding var selectedTab: Int
    @Environment(\.presentationMode) var presentationMode
    
    var body: some View {
        ScrollView {
            VStack(alignment: .leading, spacing: 24) {
                
                // üü¶ Ï†úÎ™© + ÏöîÏïΩ (padding ÌïÑÏöî)
                VStack(alignment: .leading, spacing: 8) {
                    Text(article.title)
                        .font(.largeTitle)
                        .bold()
                    
                    Text(article.summary)
                        .font(.subheadline)
                        .foregroundColor(.secondary)
                    Button {
                        selectedTab = 3 // ‚Üê "ÏÉÅÎã¥" ÌÉ≠ index
                        presentationMode.wrappedValue.dismiss()
                    } label: {
                        Text("üí¨ AI ÏÉÅÎã¥ Ï±óÎ¥áÏóêÍ≤å Î¨ºÏñ¥Î≥¥Í∏∞ ‚Üí")
                            .font(.subheadline)
                            .foregroundColor(.blue)
                            .padding(.top, 4)
                    }
                    .padding(.horizontal)
                    
                    Button {
                        selectedTab = 0
                        presentationMode.wrappedValue.dismiss()
                    } label: {
                        Text("üè† ÌôàÏúºÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞")
                            .foregroundColor(.blue)
                    }
                }
                
                Divider()
                
                // üü™ ÏÑπÏÖòÎ≥Ñ Ïπ¥Îìú
                section("‚úÖ Í∏∞Î≥∏ ÏÑ§Î™Ö", content: article.overview)
                section("üí™ Ìö®Îä•", bulletList: article.effects)
                section("üíä Î≥µÏö©Î≤ï", bulletList: article.method)
                section("‚ö†Ô∏è Ï£ºÏùòÏÇ¨Ìï≠", bulletList: article.caution)
                section("üîÑ ÏÉÅÌò∏ÏûëÏö©", bulletList: article.interaction)
            }
            .padding(.horizontal) // ‚úÖ Ïó¨Í∏∞Îßå Ï¢åÏö∞ Ïó¨Î∞± Ï†ÅÏö©
            .padding(.top)
            .frame(maxWidth: .infinity, alignment: .leading)
        }
        .navigationTitle(article.title)
        .navigationBarTitleDisplayMode(.inline)
    }
    
    // üî∑ ÌÖçÏä§Ìä∏ Îã®ÎùΩÏö© ÏÑπÏÖò
    @ViewBuilder
    func section(_ title: String, content: String) -> some View {
        VStack(alignment: .leading, spacing: 12) {
            Text(title)
                .font(.headline)
                .foregroundColor(.blue)
            
            Text(content)
                .font(.body)
                .foregroundColor(.primary)
        }
        .padding()
        .frame(width: 360, alignment: .leading) // ‚úÖ ÏõêÌïòÎäî Í≥†Ï†ïÌè≠ÏúºÎ°ú ÎßûÏ∂∞Ï§å
        .background(Color(.systemGray6))
        .cornerRadius(12)
        .frame(maxWidth: .infinity, alignment: .center) // ‚úÖ Ï§ëÏïô Ï†ïÎ†¨
    }
    
    // üî∑ Î¶¨Ïä§Ìä∏ Ìï≠Î™©Ïö© ÏÑπÏÖò
    @ViewBuilder
    func section(_ title: String, bulletList: [String]) -> some View {
        VStack(alignment: .leading, spacing: 12) {
            Text(title)
                .font(.headline)
                .foregroundColor(.blue)
            
            VStack(alignment: .leading, spacing: 8) {
                ForEach(bulletList, id: \.self) { item in
                    HStack(alignment: .top, spacing: 8) {
                        Text("‚Ä¢")
                            .padding(.top, 2)
                        Text(item)
                            .font(.body)
                            .fixedSize(horizontal: false, vertical: true)
                    }
                }
            }
        }
        .padding()
        .frame(width: 360, alignment: .leading) // ‚úÖ Í≥†Ï†ïÎêú ÎÑìÏù¥
        .background(Color(.systemGray6))
        .cornerRadius(12)
        .frame(maxWidth: .infinity, alignment: .center) // ‚úÖ Ï§ëÏïô Ï†ïÎ†¨
    }
}
